import { guarded, isJson } from '../utils/guards';
import { SimpleColumn, SimpleColumnAttributes, SimpleColumnDataType, SimpleTableSchema } from './simple-schema';

export class SimpleSqlGenerator {

  protected tableName : string;
  protected tableSchema : SimpleTableSchema;
  protected databaseName : string;
  constructor(databaseName : string, tableName : string, tableSchema : SimpleTableSchema) {

    let sqlIdentifierPattern = /^[a-zA-Z_][a-zA-Z0-9_]*$/;
    if (!sqlIdentifierPattern.test(tableName)) {
      throw new Error(`SimpleSqlGenerator - tableName is not a valid SQL Server table name: ${tableName}`);
    }
    if (!sqlIdentifierPattern.test(databaseName)) {
      throw new Error(`SimpleSqlGenerator - databaseName is not a valid SQL Server database name: ${databaseName}`);
    }
    this.tableName = tableName;
    this.tableSchema = tableSchema;
    this.databaseName = databaseName;    
  }


  public generateCreateDatabaseIfItDoesNotExist() {
    let sqlStatement = `if not exists(select * from sys.databases where name = '${this.databaseName}') `;
    sqlStatement += `create database ${this.databaseName}`;    
    return sqlStatement;
  }



}